import { Device } from "./Device";
import { IRtcPeer } from "@formant/realtime-sdk/dist/model/IRtcPeer";
export interface User {
    firstName: string;
    lastName: string;
    email: string;
    organizationId: string;
    id: string;
}
export interface TelemetryResult {
    deviceId: string;
    name: string;
    points: [number, any][];
    tags: {
        [key in string]: string | number;
    };
    type: string;
}
export declare class Fleet {
    static defaultDeviceId: string | undefined;
    static knownContext: WeakRef<Device>[];
    static setDefaultDevice(deviceId: string): Promise<void>;
    static getCurrentDevice(): Promise<Device>;
    static getDevice(deviceId: string): Promise<Device>;
    static getDevices(): Promise<Device[]>;
    static getOnlineDevices(): Promise<Device[]>;
    static getPeers(): Promise<IRtcPeer[]>;
    static getRealtimeSessions(): Promise<{
        [key in string]: string[];
    }>;
    static getRealtimeDevices(): Promise<Device[]>;
    static getLatestTelemetry(deviceIdOrDeviceIds?: string | string[]): Promise<any>;
    static getTelemetry(deviceIdOrDeviceIds: string | string[], streamNameOrStreamNames: string | string[], start: Date, end: Date, tags?: {
        [key in string]: string[];
    }): Promise<TelemetryResult[]>;
    static getFileUrl(uuid: string): Promise<string>;
}
