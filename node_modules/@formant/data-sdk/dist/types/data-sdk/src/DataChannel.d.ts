declare type DataChannelStringListener = (message: string) => void;
declare type DataChannelBinaryListener = (message: Uint8Array) => void;
export declare class DataChannel {
    private dataChannel;
    ready: boolean;
    listeners: DataChannelStringListener[];
    binaryListeners: DataChannelBinaryListener[];
    error: string | undefined;
    decoder: TextDecoder;
    constructor(dataChannel: RTCDataChannel);
    waitTilReady(): Promise<boolean>;
    send(data: string): void;
    sendBinary(data: Uint8Array): void;
    addListener(listener: DataChannelStringListener): void;
    removeListener(listener: DataChannelStringListener): void;
    addBinaryListener(listener: DataChannelBinaryListener): void;
    removeBinaryListener(listener: DataChannelBinaryListener): void;
}
export {};
