export interface User {
    firstName: string;
    lastName: string;
    email: string;
    organizationId: string;
    id: string;
}
export interface IAuthentication {
    accessToken: string;
    organizationId: string;
    refreshToken: string;
    userId: string;
}
export declare class Authentication {
    static token: string | undefined;
    static refreshToken: string | undefined;
    static currentUser: User | undefined;
    static currentOrganization: string | undefined;
    static isShareToken: boolean;
    static defaultDeviceId: string | undefined;
    static waitingForAuth: ((result: boolean) => void)[];
    static login(email: string, password: string): Promise<IAuthentication | Error>;
    static loginWithToken(token: string, refreshToken?: string): Promise<void>;
    static isAuthenticated(): boolean;
    static getCurrentUser(): User | undefined;
    static waitTilAuthenticated(): Promise<boolean>;
    static listenForRefresh(): Promise<void>;
}
