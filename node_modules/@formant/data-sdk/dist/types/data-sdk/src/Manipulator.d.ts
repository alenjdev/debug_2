import { Device, RealtimeDataStream, IJointState, RealtimeMessage } from "./Device";
export declare type RealtimeManipulatorConfig = {
    currentJointStateStream: RealtimeDataStream;
    plannedJointStateStream?: RealtimeDataStream;
    planValidStream?: RealtimeDataStream;
    endEffectorStream?: RealtimeDataStream;
    endEffectorLinkName?: string;
    baseReferenceFrame?: string;
    localFrame?: string;
};
export declare class Manipulator {
    private device;
    private config;
    currentListeners: ((js: IJointState) => void)[];
    constructor(device: Device, config: RealtimeManipulatorConfig);
    synchronize(): Promise<void>;
    desynchronize(): Promise<void>;
    onRealtimeMessage: (_peerId: string, message: RealtimeMessage) => void;
    addCurrentJointStateListener(listener: (js: IJointState) => void): Promise<void>;
}
