import { Device, DataChannel } from "./main";
declare abstract class RequestDataChannel {
    protected device: Device;
    protected channel_name: string;
    protected timeout: number;
    protected channel: undefined | DataChannel;
    protected requestIdToResponseMap: Map<string, any>;
    constructor(device: Device, channel_name: string, timeout: number);
}
export declare class BinaryRequestDataChannel extends RequestDataChannel {
    private RESPONSE_SUCCESS_BYTE;
    private decoder;
    generateBinaryId(): Uint8Array;
    initialize(): Promise<void>;
    request(data: Uint8Array): Promise<any>;
}
export declare class TextRequestDataChannel extends RequestDataChannel {
    generateTextId(): string;
    initialize(): Promise<void>;
    request(data: string): Promise<any>;
}
export {};
