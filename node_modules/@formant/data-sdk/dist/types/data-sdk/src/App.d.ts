export interface ModuleData {
    queryRange: QueryRange;
    time: number;
    streams: {
        [stream_name: string]: Stream;
    };
}
export interface QueryRange {
    start: number;
    end: number;
}
export interface Stream {
    data: StreamData[];
    loading: boolean;
    tooMuchData: boolean;
    type: string;
}
export interface StreamData {
    points: DataPoint[];
    deviceId: string;
    agentId: string;
    name: string;
    tags: {
        [key: string]: string;
    };
    type: string;
}
export declare type DataPoint = [number, any];
export declare class App {
    private static sendAppMessage;
    private static getCurrentModuleContext;
    static isModule(): boolean;
    static goToTime(date: Date): void;
    static showMessage(message: string): void;
    static requestModuleData(): void;
    static setModuleDateTimeRange(beforeInMilliseconds: number, afterInMilliseconds?: number): void;
    static refreshAuthToken(): void;
    static setupModuleMenus(menus: {
        label: string;
    }[]): void;
    static addMenuListener(handler: (label: string) => void): void;
    static addAccessTokenRefreshListener(handler: (token: string) => void): void;
    static addModuleDataListener(handler: (data: ModuleData) => void): void;
}
