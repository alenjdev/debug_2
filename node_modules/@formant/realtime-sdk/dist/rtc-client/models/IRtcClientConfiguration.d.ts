import { Timestamp } from "../../model/Timestamp";
import { Uuid } from "../../model/Uuid";
import { SignalingPromiseClient } from "../../protos/api/signaling/v1/signaling_grpc_web_pb";
import { IRtcStreamMessage } from "./IRtcStreamMessage";
export declare type IRtcClientConfiguration = {
    lanOnlyMode: true;
    receive: (peerId: Uuid, message: IRtcStreamMessage) => void;
    onStreamsInfoUpdate?: (peerId: Uuid, timestamp: Timestamp) => void;
    alternateRTCPeerConnection?: typeof RTCPeerConnection;
} | {
    lanOnlyMode?: false;
    receive: (peerId: Uuid, message: IRtcStreamMessage) => void;
    getToken: () => Promise<string>;
    signalingClient: SignalingPromiseClient;
    onStreamsInfoUpdate?: (peerId: Uuid, timestamp: Timestamp) => void;
    alternateRTCPeerConnection?: typeof RTCPeerConnection;
    track?: (event: string, properties?: object) => void;
};
