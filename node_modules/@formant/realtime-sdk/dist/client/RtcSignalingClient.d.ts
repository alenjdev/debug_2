import { FormantBaseClient } from "../common/FormantBaseClient";
import { IRtcAddSignalsRequest } from "../model/IRtcAddSignalsRequest";
import { IRtcCreatePeerRequest } from "../model/IRtcCreatePeerRequest";
import { IRtcCreateSessionRequest } from "../model/IRtcCreateSessionRequest";
import { IRtcPeer } from "../model/IRtcPeer";
import { IRtcSession } from "../model/IRtcSession";
import { IRtcSignal } from "../model/IRtcSignal";
import { Uuid } from "../model/Uuid";
export declare class RtcSignalingClient extends FormantBaseClient {
    createPeer(token: string, request: IRtcCreatePeerRequest): Promise<IRtcPeer>;
    getPeers(token: string): Promise<IRtcPeer[]>;
    refreshPeer(token: string, id: Uuid): Promise<void>;
    createSession(token: string, request: IRtcCreateSessionRequest): Promise<IRtcSession>;
    refreshSession(token: string, id: Uuid): Promise<void>;
    deleteSession(token: string, id: Uuid): Promise<void>;
    getSessions(token: string): Promise<IRtcSession[]>;
    getIceServers(token: string): Promise<RTCIceServer[]>;
    addSignals(token: string, sessionId: Uuid, request: IRtcAddSignalsRequest): Promise<void>;
    takeSignals(token: string, sessionId: Uuid): Promise<IRtcSignal[]>;
}
