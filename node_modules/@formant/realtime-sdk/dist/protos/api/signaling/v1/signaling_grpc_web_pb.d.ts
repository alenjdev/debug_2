import * as grpcWeb from 'grpc-web';

import * as protos_api_signaling_v1_signaling_pb from '../../../../protos/api/signaling/v1/signaling_pb';


export class SignalingClient {
  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; });

  createPeer(
    request: protos_api_signaling_v1_signaling_pb.CreatePeerRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: protos_api_signaling_v1_signaling_pb.CreatePeerResponse) => void
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.CreatePeerResponse>;

  deletePeer(
    request: protos_api_signaling_v1_signaling_pb.DeletePeerRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: protos_api_signaling_v1_signaling_pb.DeletePeerResponse) => void
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.DeletePeerResponse>;

  refreshPeer(
    request: protos_api_signaling_v1_signaling_pb.RefreshPeerRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: protos_api_signaling_v1_signaling_pb.RefreshPeerResponse) => void
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.RefreshPeerResponse>;

  getPeers(
    request: protos_api_signaling_v1_signaling_pb.GetPeersRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: protos_api_signaling_v1_signaling_pb.GetPeersResponse) => void
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.GetPeersResponse>;

  getIceServers(
    request: protos_api_signaling_v1_signaling_pb.GetIceServersRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: protos_api_signaling_v1_signaling_pb.GetIceServersResponse) => void
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.GetIceServersResponse>;

  sendSignal(
    request: protos_api_signaling_v1_signaling_pb.SendSignalRequest,
    metadata: grpcWeb.Metadata | undefined,
    callback: (err: grpcWeb.Error,
               response: protos_api_signaling_v1_signaling_pb.SendSignalResponse) => void
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.SendSignalResponse>;

  receiveSignalStream(
    request: protos_api_signaling_v1_signaling_pb.ReceiveSignalStreamRequest,
    metadata?: grpcWeb.Metadata
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.ReceiveSignalStreamResponse>;

}

export class SignalingPromiseClient {
  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; });

  createPeer(
    request: protos_api_signaling_v1_signaling_pb.CreatePeerRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<protos_api_signaling_v1_signaling_pb.CreatePeerResponse>;

  deletePeer(
    request: protos_api_signaling_v1_signaling_pb.DeletePeerRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<protos_api_signaling_v1_signaling_pb.DeletePeerResponse>;

  refreshPeer(
    request: protos_api_signaling_v1_signaling_pb.RefreshPeerRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<protos_api_signaling_v1_signaling_pb.RefreshPeerResponse>;

  getPeers(
    request: protos_api_signaling_v1_signaling_pb.GetPeersRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<protos_api_signaling_v1_signaling_pb.GetPeersResponse>;

  getIceServers(
    request: protos_api_signaling_v1_signaling_pb.GetIceServersRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<protos_api_signaling_v1_signaling_pb.GetIceServersResponse>;

  sendSignal(
    request: protos_api_signaling_v1_signaling_pb.SendSignalRequest,
    metadata?: grpcWeb.Metadata
  ): Promise<protos_api_signaling_v1_signaling_pb.SendSignalResponse>;

  receiveSignalStream(
    request: protos_api_signaling_v1_signaling_pb.ReceiveSignalStreamRequest,
    metadata?: grpcWeb.Metadata
  ): grpcWeb.ClientReadableStream<protos_api_signaling_v1_signaling_pb.ReceiveSignalStreamResponse>;

}

